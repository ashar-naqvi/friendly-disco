program FindRemovedItem;

{$APPTYPE CONSOLE}

uses
  SysUtils;

var
 numbers,shufflenumbers,newnumbers: array of integer;
 n,i,missingno,oldsum,newsum: integer;

{
Christy: You're still solving a slightly more general problem here by starting
with an array of random integers, but your solution would work for the
original challenge. Be careful to read/listen to the problem carefully and make
sure you're solving the right problem, otherwise you may get tripped up solving
a harder or easier task!
}
procedure GenerateRandomNumbers(n: integer);
 var
  i: integer;
 begin
    for i := 1 to n do
      numbers[i] := 1 + Random(100);       {between 1 and 100}
 end;

procedure ShuffleAndRemove;
{
Christy: It's unclear to me where we're removing a number here. A comment could
make things clearer.
}
 var
  rand: integer;
 begin
  for i := 1 to n do
   begin
      {
      Christy: I'm not sure this is going to give us a fully shuffled array -
      a lot of the time we're going to, by chance, come across an element of
      shufflenumbers that has already been set to zero, and so leave the
      current number as is.
      }
      rand := (1 + Random(n));
      {
      Christy: It's unclear to me why this is a while loop - we never end up
      executing the clause more than once, so an if should suffice?
      }
      while shufflenumbers[rand] <> 0 do
        begin
          newnumbers[i] := shufflenumbers[rand];
          shufflenumbers[rand] := 0;
        end;
   end;
 end;

begin
 writeln('Please enter the amount of numbers you would like in the list:');
 readln(n);
 SetLength(numbers, n);
 SetLength(shufflenumbers, n);
 SetLength(newnumbers, n-1);
 for i := 1 to n-1 do
   newnumbers[i] := 0;
 GenerateRandomNumbers(n);
 writeln('The numbers in the list are: ');
 for i := 1 to n do
  write(numbers[i], ' ');

   {
   Christy: I'd expect this for loop to live in ShuffleAndRemove.
   shufflenumbers should also probably be a local variable of ShuffleAndRemove
   rather than in the global scope.
   }
 for i := 1 to n do
   shufflenumbers[i] := numbers[i];
 ShuffleAndRemove;
 writeln('List shuffled and and one item removed');
 for i := 1 to n do
  writeln(newnumbers[i]);
 readln;

 {
 Christy: Good approach - linear time, constant space, and generalises beyond
 the original task.
 }
 oldsum := 0;
 for i := 1 to n do
  oldsum := oldsum + numbers[i];
 newsum := 0;
 for i := 1 to n do
  newsum := newsum + newnumbers[i];
 missingno := (oldsum - newsum);
 writeln('The missing number was:', missingno, '.');
 readln;
end.

